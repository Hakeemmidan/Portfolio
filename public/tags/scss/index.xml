<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scss on Hakeem Almidan</title>
    <link>/tags/scss/</link>
    <description>Recent content in scss on Hakeem Almidan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 May 2020 17:15:02 -0700</lastBuildDate>
    
	<atom:link href="/tags/scss/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SCSS Animation Mixin</title>
      <link>/scss-animation-mixin/</link>
      <pubDate>Tue, 05 May 2020 17:15:02 -0700</pubDate>
      
      <guid>/scss-animation-mixin/</guid>
      <description>Problem The slightest change in CSS animations (@keyframes) requires a creation of a new animation.
Problem Example @keyframes to-yellow { 50% { background-color: yellow; } } @keyframes to-skyblue { 50% { background-color: skyblue; } } Both of the animations pretty much do the same thing, but we had to create two of them. We had to create two of them because their property (background-color) had different values (i.e. yellow and skyblue).</description>
    </item>
    
    <item>
      <title>How to Prevent CSS Hover State From Getting stuck on Mobile Browsers</title>
      <link>/css-hover-on-mobile/</link>
      <pubDate>Thu, 16 Apr 2020 21:58:27 -0700</pubDate>
      
      <guid>/css-hover-on-mobile/</guid>
      <description>Problem The CSS hover state often gets stuck on mobile (touch screen) browsers. It would be something like this:
 (click image to play GIF)   How to Fix It Using the &amp;lsquo;hover&amp;rsquo; CSS media query, which could be applied either through SCSS or CSS. In the case of SCSS, we&amp;rsquo;re going to use a mixin.
Here is each solution respectively:
Solution 1: SCSS Mixin The mixin:
@mixinhover-supported { @media (hover: hover) { @content; } } Example use:</description>
    </item>
    
  </channel>
</rss>